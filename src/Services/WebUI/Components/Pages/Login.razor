@page "/login"

@layout UserLayout

@using Microsoft.AspNetCore.Antiforgery
@using API.Contract.Users.Requests
@using API.Contract.Users.Responses
@using HTTPMethod = WebUI.HttpMethod
@using WebUI.Components.Layout

@attribute [RequireAntiforgeryToken(required: false)]

@inject NavigationManager Navigator;
@inject RequestBuilder RequestBuilder;

<h3>Login</h3>
<div>
  <EditForm
     FormName="login-form"
     Model="Input"
     OnValidSubmit="OnSubmitHandler"
     method="post">
     <h4 class="text-danger">@message</h4>
    <div class="mb-3">
      <label for="username">Tên đăng nhập</label>
      <InputText type="text" @bind-Value="Input.Username" class="form-control"/>
    </div>
    <div class="mb-3">
      <label for="password">Mật khẩu</label>
      <InputText type="password" @bind-Value="Input.Password" class="form-control"/>
    </div>
    <div class="mb-3 d-flex justify-content-between">
      <button class="btn btn-primary" type="submit">Đăng nhập</button>
      <a class="btn btn-primary" href="/register">Đăng ký</a>
    </div>
  </EditForm>
</div>


@code {
  [SupplyParameterFromForm(FormName = "login-form")]
  private InputModel Input { get; set; } = new();

  [CascadingParameter]
  private HttpContext HttpContext { get; set; } = default!;

  private string message = string.Empty;

  public async Task OnSubmitHandler()
  {
    var payload = Input.ToRequest();
    var response = await RequestBuilder
      .WithEndpoint(Endpoints.User.Authentication)
      .WithPayload(payload)
      .WithHttpMethod(HTTPMethod.POST)
      .Send<AuthenticateResponse>();

    if(response.IsSuccess)
    {
      var accessToken = response.Data.AccessToken;

      HttpContext.Response.Cookies.Append("access_token", accessToken, new CookieOptions
      {
          HttpOnly = true,
          SameSite = SameSiteMode.None,
          Secure = true
      });

      if (response.Data.IsAdmin)
        Navigator.NavigateTo("/admin");
      else
        Navigator.NavigateTo("/");
      return;
    }

    message = "Sai tên đăng nhập/mật khẩu";
  }

  private sealed class InputModel
  {
    public string Username { get; set; } = string.Empty;
    public string Password { get; set; } = string.Empty;

    public AuthenticateRequest ToRequest()
    {
      return new(Username, Password);
    }
  }
}
