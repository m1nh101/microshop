@inherits LayoutComponentBase

<div class="page">
  <main>
    <div class="row p-3 nav_bg_color layout_user_nav">
      <div id="search-bar" class="col-md-6 offset-md-2">
        <input class="form-control w-100 ps-2" placeholder="Tên sản phẩm"/>
      </div>
      <div class="col-md-2 offset-md-1 d-flex align-items-center justify-content-around">
        <Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
          <NotAuthorized>
            <a href="/login" class="btn btn-light">Đăng nhập</a>
            <a href="/register" class="btn btn-light">Đăng ký</a>
          </NotAuthorized>
          <Authorized>
            <NavLink href="/cart" class="btn btn-light">Giỏ hàng</NavLink>
            <form method="post" action="/logout">
              <input type="submit" value="Đăng xuất" class="btn btn-danger" />
            </form>
          </Authorized>
        </Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
      </div>
    </div>
    <article class="content px-4">
      @Body
    </article>
  </main>
</div>

@code {
  [CascadingParameter]
  private HttpContext HttpContext { get; set; } = default!;

  [Inject]
  public PersistentComponentState State { get; set; } = default!;

  protected override void OnInitialized()
  {
    var accessToken = HttpContext.Request.Cookies["access_token"]?.ToString()
      ?? HttpContext.Request.Headers.Authorization.ToString();

    State.RegisterOnPersisting(() =>
    {
      if (!string.IsNullOrEmpty(accessToken))
        State.PersistAsJson(nameof(TokenProvider), new TokenProvider
          {
            AccessToken = accessToken,
            RefreshToken = string.Empty
          });

      return Task.CompletedTask;
    });

    base.OnInitialized();
  }
}